{"componentChunkName":"component---src-templates-post-js","path":"/blog/to-new-frontiers-how-gojek-went-international/","result":{"data":{"ghostPost":{"id":"Ghost__Post__5ec2d7d87aa22c4066f83c9e","title":"To New Frontiers ‚Äî How GOJEK Went International","slug":"to-new-frontiers-how-gojek-went-international","featured":false,"feature_image":"https://gojek-ghost.zysk.in/content/images/2020/05/2.gif","excerpt":"The story of how GOJEK ventured beyond Indonesia‚Äî and the team that charted our course.","custom_excerpt":"The story of how GOJEK ventured beyond Indonesia‚Äî and the team that charted our course.","visibility":"public","created_at_pretty":"18 May, 2020","published_at_pretty":"02 May, 2019","updated_at_pretty":"18 May, 2020","created_at":"2020-05-19T00:15:44.000+05:30","published_at":"2019-05-02T09:30:00.000+05:30","updated_at":"2020-05-19T00:40:23.000+05:30","meta_title":null,"meta_description":"The story of how GOJEK ventured beyond Indonesia‚Äî and the team that charted our course.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Gojek","slug":"gojek","bio":null,"profile_image":null,"twitter":"@gojektech","facebook":null,"website":"http://www.gojek.io"}],"primary_author":{"name":"Gojek","slug":"gojek","bio":null,"profile_image":null,"twitter":"@gojektech","facebook":null,"website":"http://www.gojek.io"},"primary_tag":{"name":"Stories","slug":"stories","description":"Deep dives into high-impact initiatives and products that helped Gojek create significant impact.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Stories","slug":"stories","description":"Deep dives into high-impact initiatives and products that helped Gojek create significant impact.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"By Sooraj Rajmohan\n\nPart 1/3 | Uncertainty\nIndonesia ‚Äî a constellation of 17,000 islands sprinkled between two oceans. A\nmelting pot of ethnicities and cultures, home to the fourth largest population\nin the world, and ripe with business opportunity. This dazzling island nation is\nwhere GOJEK was born. Its chaotic streets were the playground where a scrappy\nyoung startup grew, and the love of its people saw GOJEK grow into a Super App.\n\n> For GOJEK, Indonesia is home. Comfortable. Familiar. Safe.\nThe story of a Super App, however, is about more than one country. It is about\ngrowing up, stepping out the door, and journeying into the unknown. This\nthree-part series details GOJEK‚Äôs journey beyond Indonesia‚Äôs borders, and the\nstory of the team that guided it through roads untraveled.\n\nThe mandate. The madness.\nIn late 2017, at a meeting of product leads at GOJEK‚Äôs Jakarta HQ, then COO\nRohan Monga confirmed the rumour that had been floating around hallways.\n\n> We were going abroad.\nOn paper, the idea was simple: GOJEK was targeting new markets in Southeast Asia\n‚Äî starting with Vietnam, Thailand and Philippines.\n\nThe reason for choosing these geographies went beyond the obvious (proximity).\nThese countries have similar dynamics to pre-GOJEK Indonesia. The population\nnumbers are in the same ballpark, broadband Internet penetration is high (and\ngrowing rapidly), the food delivery market is nascent, and there was no dominant\nplayer in the digital wallet space.\n\n> The conditions were ripe for disruption.\nThe plan was to launch swiftly and stealthily, and take competition by surprise.\nEach targeted geography even got its own codename. Vietnam was nicknamed Vogue,\nThailand dubbed Tatler, and Philippines ‚Äî Fortune (notice a pattern? üòã)\n\nThis was only the beginning, however. The plan was more elaborate.\n\nIt was important to recreate this feeling of pride in the brand in the new\nmarkets as well. To achieve this, it was decided to launch the new offerings\nwith completely new branding ‚Äî GO-VIET in Vietnam, and GET in Thailand.\nEverything about these new local brands was devised to emphasise the values of\nthat country.\n\nThe goal: to build a local champion ‚Äî one that the people, as well as commercial\nand regulatory agencies ‚Äî could get behind. The vision was solid. Everyone was\npumped.\n\nBut there was a problem:\n\n> Our existing tech stack was already buckling under the strain of ever-increasing\ndemand, and would not be able to handle new geographies.\nWe would need a different solution. GOJEK had crossed the borders of the\nfamiliar, into the unknown.\n\nOne of the options that made sense was to decouple from Indonesia and create new\nenvironments for the new countries. This way, the scaling issues affecting\nIndonesia would not affect the new geographies, and GOJEK developers also got\ngreater flexibility to customise and localise the app and products for the new\nmarkets.\n\nBut creating new environments/clusters (read mini-GOJEKs) came with its own set\nof complexities. This process also needed to be repeated in quick succession in\neach country.\n\nThe answer to this problem was using automation for cluster creation‚Ä¶ but not on\nVM‚Äôs. To do something new, new technologies would have to be adopted. The path\nchosen was to use Kubernetes to automate cluster creation and service deployment\non containers.\n\nUnfortunately, no one at GOJEK had the insights or the bandwidth required to do\nthis at the time. We had the vision. We knew what needed to be done.\n\n> We needed the right people.\nEnter Team Trifecta\nIt all started with a Product Manager, who was tasked with putting together a\ngroup of people to accomplish the task ahead. About a week in, three QAs joined,\nfollowed in another week by an eight-member crack team who would develop the\ninitial Proof Of Concept (POC). The members of this team were cherry-picked from\nacross GOJEK product teams (with a fair bit of negotiation and bargaining\ninvolved üòÖ).\n\nIt would be this team‚Äôs duty to first run an efficient proof-of-concept (POC)\nfor the launch, and then develop frameworks, create playbooks, do product\ncustomisation and automate infrastructure creation and deployment. The idea was\nto create a scalable model and replicate it in any new country GOJEK wanted to\nlaunch in.\n\nInternational expansion was a big deal though, and an exciting challenge. As\nTrifecta‚Äôs work picked up steam, more people would put up their hands to work on\nthis exciting new project, over and above their existing responsibilities.\n\nWhile the core Trifecta team went about its business to create a POC, a\nspecialist four-person team was brought in. Their job was to work in parallel on\nour big play ‚Äî automate cluster creation.\n\n> We had a fellowship. It was time for the journey.\nTrifecta‚Äôs first task was to figure out all the changes that had to be made to\nbuild a new app for each country. As soon as this project started, it became\napparent that a long uphill climb lay ahead.\n\nFor starters, the driver app was never built in a way to support any other\nlanguage besides Bahasa Indonesia. This had to be re-engineered so it could\nsupport localisation/i18n.\n\nAnd then there was Stan Marsh.\n\nStan Marsh [https://blog.gojekengineering.com/thank-you-stan-marsh-29db553544bf] \nis a legendary name in the GOJEK mythos. It refers to our late legacy codebase.\nStan Marsh was the beast of burden that carried GOJEK through the early years,\nand each new commit made to it was often a desperate attempt to douse a fire and\nkeep GOJEK up and running. Understandably, a lot of legacy services and Stan\nMarsh were not designed to support GOJEK‚Äôs journey into new geographies.\n\nTrifecta members found stumbling blocks everywhere ‚Äî there was no provision for\nnew currencies and time zones, for example. The pack mule was struggling to keep\nup with the party.\n\nOne thing was obvious ‚Äî GOJEK‚Äôs entire mobile codebase had to be re-architected\nto be able to efficiently build multiple apps and designs on top of it.\n\n> Automation on Kubernetes would have to wait.\n> We had a detour to take.\nDescending into the mines\nFirst things first ‚Äî Trifecta needed an environment to play around in and do the\ntesting without affecting the BAU. The team dusted off an old User Acceptance\nTesting (UAT) environment, which was not in use at the time, and proceeded to do\nexperimentation and development within it. Slowly, the GOJEK app was dismantled\nand rebuilt into a new avatar that would service new markets.\n\nThis turned out to be a lot more complicated than it first sounded (which is a\ncommon plot point throughout this story, as you will see üòê). Major changes\nneeded to be made to the driver onboarding portal, for instance, and the team\nneeded to figure out ways to transfer money from the wallets of driver partners\ninto their bank accounts.\n\nGOJEK was always used to having multiple support teams, and well-established\nbank integrations to help with such matters. In this new territory, it all\nneeded to be figured out from scratch. Add to the fact that GOJEK itself was\nrapidly evolving, making it difficult for the team to figure out which services\nshould be transitioned and which would soon be deprecated, and the job became\nmore complex. As Trifecta PM Sourabh Gupta puts it:\n\n> ‚ÄúIt was like changing wheels on a moving car.‚Äù\nWhile the main team focussed on transforming existing services and mobile\narchitecture to build a working POC, a parallel team undertook the long and\npainful journey to understand inter-service dependencies that would need to be\ntackled.\n\nIronically, they were themselves depending on multiple GOJEK product teams to\nunderstand the dependencies of over 400 microservices. This was crucial in order\nto chart out a plan for automating the deployments and cluster creation.\n\nHours turned into days‚Ä¶\n\nDocumentation was scarce, and the team had to undertake the painstaking process\nof talking to service owners, and map out configurations. This also meant many\nGOJEK team members had to take time out of their daily routines to spend on\nknowledge transfer.\n\nIdentify, document, dismantle, develop. Over and over.\n\nAn emergence. A transformation.\nIt took some doing, but finally, there was a glimmer at the end of the tunnel.\nTrifecta emerged into the light of a new day with a finished POC. A relatively\ncomplete driver and consumer app that were worthy of upload to the Play store.\n\nThe deadline the team had given itself was three months.\n\nIt had only taken two-and-a-half.\n\nTrifecta‚Äôs eight-member crack team had accomplished what it set out to do, and\nbuilt a working POC. Their role in this journey was at an end, and so they\ndisbanded and went back to their product teams. The original fellowship was no\nmore.\n\n> The team working on dependencies however, was facing rough weather.\nSifting through those 100s of microservices was taking longer than expected, and\nthe knowledge transfer meetings were slowly losing attendance. Progress was\nimbalanced, and the parallel approach was not yielding results. There was only\none move that made sense: absorb the engineers into the core Trifecta team.\n\n> The birth of a new party for the next stage of the journey.\nThe constitution of the team had changed, but the goal remained the same. The\nfirst months of 2018 saw Trifecta work tirelessly to untangle the intricate\ndependency map of GOJEK‚Äôs microservices. The process was tedious, but it did\nhave a silver lining. We now had a ton of documentation about GOJEK‚Äôs product\nand service architecture ‚Äî a path had been cut through the woods for others on\nsimilar journeys.\n\nFinally, a clear picture emerged.\n\nIt‚Ä¶ looked a little like this:\n\nMonths of work, depicted in a single image. Complicated as it looks, this was a\nmajor breakthrough. The key to the codex.\n\nInitially, it was estimated that in order to launch with two key products\n(GO-RIDE and GO-SEND) GOJEK would need to deploy 40 microservices for the new\nclusters. With each new dependency unearthed, that number kept inflating.\nIntegration of GO-PAY services (which were required for maintaining a driver\nwallet, and to handle incentives and subsidies) brought its own set of\ncomplexities, as its services and tech architecture was modelled differently\nfrom the rest of GOJEK.\n\nAs the launch timeline drew closer, there were over 100 microservices to deploy.\nNot an easy task, but the team finally knew what needed to be done.\n\nThe fog of war was finally parting. Now, to build a working environment.\n\nGunning for the finish line\nThe work on automation and deployment scripts now continued as originally\nplanned. The wheels were in motion again, and passing through terrain GOJEK knew\nwell. It was time to build stuff.\n\nOpsTech, Transport, GO-SEND, Marketplace, Driver Platform, GO-PAY and Platform\nteams provided backup, and the products for Vietnam launch were developed (we\nwould launch with GO-RIDE and GO-SEND). The team was working efficiently, and as\nthe cool grip of winter began to give way to the warm summer months, a basic\nenvironment was up for app development.\n\n> Then came the next wave of trouble.\nAs the environment took shape, our inexperience in dealing with new geographies\ncame back to haunt us. Configuration mismatch across clusters and deployment\ndrift reared their heads. Suddenly, there were more questions that needed\nanswering:\n\n> 1.Where would we manage configuration of services for all the new markets?\n> 2. How would we deploy on containers and ensure that the same version of code\nwas running on all environments?\n> 3. What about logging and monitoring?\nThe goal seemed an eternity away, again.\n\nChaos ensued.\n\nFor the continued story of how GOJEK grappled with the challenges brought on by\na new geography, read part 2 [http://bit.ly/2Rm2cSC] of this 3 part series.\n\n\n--------------------------------------------------------------------------------\n\nWant our updates beamed straight to your inbox? Sign up for our newsletter!\n[https://mailchi.mp/go-jek/gojek-tech-newsletter]","html":"<p>By Sooraj Rajmohan</p><h1 id=\"part-1-3-uncertainty\">Part 1/3 | Uncertainty</h1><p>Indonesia ‚Äî a constellation of 17,000 islands sprinkled between two oceans. A melting pot of ethnicities and cultures, home to the fourth largest population in the world, and ripe with business opportunity. This dazzling island nation is where GOJEK was born. Its chaotic streets were the playground where a scrappy young startup grew, and the love of its people saw GOJEK grow into a Super App.</p><blockquote><em>For GOJEK, Indonesia is home. Comfortable. Familiar. Safe.</em></blockquote><p>The story of a Super App, however, is about more than one country. It is about growing up, stepping out the door, and journeying into the unknown. This three-part series details GOJEK‚Äôs journey beyond Indonesia‚Äôs borders, and the story of the team that guided it through roads untraveled.</p><h1 id=\"the-mandate-the-madness-\"><strong>The mandate. The madness.</strong></h1><p>In late 2017, at a meeting of product leads at GOJEK‚Äôs Jakarta HQ, then COO Rohan Monga confirmed the rumour that had been floating around hallways.</p><blockquote><em><em>We were going abroad.</em></em></blockquote><p>On paper, the idea was simple: GOJEK was targeting new markets in Southeast Asia ‚Äî starting with Vietnam, Thailand and Philippines.</p><p>The reason for choosing these geographies went beyond the obvious (proximity). These countries have similar dynamics to pre-GOJEK Indonesia. The population numbers are in the same ballpark, broadband Internet penetration is high (and growing rapidly), the food delivery market is nascent, and there was no dominant player in the digital wallet space.</p><blockquote><em>The conditions were ripe for disruption.</em></blockquote><p>The plan was to launch swiftly and stealthily, and take competition by surprise. Each targeted geography even got its own codename. Vietnam was nicknamed Vogue, Thailand dubbed Tatler, and Philippines ‚Äî Fortune (notice a pattern? üòã)</p><p>This was only the beginning, however. The plan was more elaborate.</p><p>It was important to recreate this feeling of pride in the brand in the new markets as well. To achieve this, it was decided to launch the new offerings with completely new branding ‚Äî GO-VIET in Vietnam, and GET in Thailand. Everything about these new local brands was devised to emphasise the values of that country.</p><p>The goal: to build a local champion ‚Äî one that the people, as well as commercial and regulatory agencies ‚Äî could get behind. The vision was solid. Everyone was pumped.</p><p>But there was a problem:</p><blockquote><em>Our existing tech stack was already buckling under the strain of ever-increasing demand, and would not be able to handle new geographies.</em></blockquote><p>We would need a different solution. GOJEK had crossed the borders of the familiar, into the unknown.</p><p>One of the options that made sense was to decouple from Indonesia and create new environments for the new countries. This way, the scaling issues affecting Indonesia would not affect the new geographies, and GOJEK developers also got greater flexibility to customise and localise the app and products for the new markets.</p><p>But creating new environments/clusters (read mini-GOJEKs) came with its own set of complexities. This process also needed to be repeated in quick succession in each country.</p><p>The answer to this problem was using automation for cluster creation‚Ä¶ but not on VM‚Äôs. To do something new, new technologies would have to be adopted. The path chosen was to use Kubernetes to automate cluster creation and service deployment on containers.</p><p>Unfortunately, no one at GOJEK had the insights or the bandwidth required to do this at the time. We had the vision. We knew what needed to be done.</p><blockquote><em>We needed the right people.</em></blockquote><h1 id=\"enter-team-trifecta\"><strong>Enter Team Trifecta</strong></h1><p>It all started with a Product Manager, who was tasked with putting together a group of people to accomplish the task ahead. About a week in, three QAs joined, followed in another week by an eight-member crack team who would develop the initial Proof Of Concept (POC). The members of this team were cherry-picked from across GOJEK product teams (with a fair bit of negotiation and bargaining involved üòÖ).</p><p>It would be this team‚Äôs duty to first run an efficient proof-of-concept (POC) for the launch, and then develop frameworks, create playbooks, do product customisation and automate infrastructure creation and deployment. The idea was to create a scalable model and replicate it in any new country GOJEK wanted to launch in.</p><p>International expansion was a big deal though, and an exciting challenge. As Trifecta‚Äôs work picked up steam, more people would put up their hands to work on this exciting new project, over and above their existing responsibilities.</p><p>While the core Trifecta team went about its business to create a POC, a specialist four-person team was brought in. Their job was to work in parallel on our big play ‚Äî automate cluster creation.</p><blockquote><em>We had a fellowship. It was time for the journey.</em></blockquote><p>Trifecta‚Äôs first task was to figure out all the changes that had to be made to build a new app for each country. As soon as this project started, it became apparent that a long uphill climb lay ahead.</p><p>For starters, the driver app was never built in a way to support any other language besides Bahasa Indonesia. This had to be re-engineered so it could support localisation/i18n.</p><p><strong><strong>And then there was Stan Marsh.</strong></strong></p><p><a href=\"https://blog.gojekengineering.com/thank-you-stan-marsh-29db553544bf\" rel=\"noopener\">Stan Marsh</a> is a legendary name in the GOJEK mythos. It refers to our late legacy codebase. Stan Marsh was the beast of burden that carried GOJEK through the early years, and each new commit made to it was often a desperate attempt to douse a fire and keep GOJEK up and running. Understandably, a lot of legacy services and Stan Marsh were not designed to support GOJEK‚Äôs journey into new geographies.</p><p>Trifecta members found stumbling blocks everywhere ‚Äî there was no provision for new currencies and time zones, for example. The pack mule was struggling to keep up with the party.</p><p>One thing was obvious ‚Äî GOJEK‚Äôs entire mobile codebase had to be re-architected to be able to efficiently build multiple apps and designs on top of it.</p><blockquote><em>Automation on Kubernetes would have to wait.</em></blockquote><blockquote><em>We had a detour to take.</em></blockquote><h1 id=\"descending-into-the-mines\"><strong>Descending into the mines</strong></h1><p>First things first ‚Äî Trifecta needed an environment to play around in and do the testing without affecting the BAU. The team dusted off an old User Acceptance Testing (UAT) environment, which was not in use at the time, and proceeded to do experimentation and development within it. Slowly, the GOJEK app was dismantled and rebuilt into a new avatar that would service new markets.</p><p>This turned out to be a lot more complicated than it first sounded (which is a common plot point throughout this story, as you will see üòê). Major changes needed to be made to the driver onboarding portal, for instance, and the team needed to figure out ways to transfer money from the wallets of driver partners into their bank accounts.</p><p>GOJEK was always used to having multiple support teams, and well-established bank integrations to help with such matters. In this new territory, it all needed to be figured out from scratch. Add to the fact that GOJEK itself was rapidly evolving, making it difficult for the team to figure out which services should be transitioned and which would soon be deprecated, and the job became more complex. As Trifecta PM Sourabh Gupta puts it:</p><blockquote>‚ÄúIt was like changing wheels on a moving car.‚Äù</blockquote><p>While the main team focussed on transforming existing services and mobile architecture to build a working POC, a parallel team undertook the long and painful journey to understand inter-service dependencies that would need to be tackled.</p><p>Ironically, they were themselves depending on multiple GOJEK product teams to understand the dependencies of over 400 microservices. This was crucial in order to chart out a plan for automating the deployments and cluster creation.</p><p><strong><strong>Hours turned into days‚Ä¶</strong></strong></p><p>Documentation was scarce, and the team had to undertake the painstaking process of talking to service owners, and map out configurations. This also meant many GOJEK team members had to take time out of their daily routines to spend on knowledge transfer.</p><p><em><em>Identify, document, dismantle, develop. Over and over.</em></em></p><h1 id=\"an-emergence-a-transformation-\"><strong>An emergence. A transformation.</strong></h1><p>It took some doing, but finally, there was a glimmer at the end of the tunnel. Trifecta emerged into the light of a new day with a finished POC. A relatively complete driver and consumer app that were worthy of upload to the Play store.</p><p><em><em>The deadline the team had given itself was three months.</em></em></p><p><strong><strong><em><em>It had only taken two-and-a-half.</em></em></strong></strong></p><p>Trifecta‚Äôs eight-member crack team had accomplished what it set out to do, and built a working POC. Their role in this journey was at an end, and so they disbanded and went back to their product teams. The original fellowship was no more.</p><blockquote><em>The team working on dependencies however, was facing rough weather.</em></blockquote><p>Sifting through those 100s of microservices was taking longer than expected, and the knowledge transfer meetings were slowly losing attendance. Progress was imbalanced, and the parallel approach was not yielding results. There was only one move that made sense: absorb the engineers into the core Trifecta team.</p><blockquote><em><em>The birth of a new party for the next stage of the journey.</em></em></blockquote><p>The constitution of the team had changed, but the goal remained the same. The first months of 2018 saw Trifecta work tirelessly to untangle the intricate dependency map of GOJEK‚Äôs microservices. The process was tedious, but it did have a silver lining. We now had a ton of documentation about GOJEK‚Äôs product and service architecture ‚Äî a path had been cut through the woods for others on similar journeys.</p><p>Finally, a clear picture emerged.</p><p>It‚Ä¶ looked a little like this:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/3456/0*DPnYDJeeyJxE8uSI\" class=\"kg-image\"></figure><p>Months of work, depicted in a single image. Complicated as it looks, this was a major breakthrough. The key to the codex.</p><p>Initially, it was estimated that in order to launch with two key products (GO-RIDE and GO-SEND) GOJEK would need to deploy 40 microservices for the new clusters. With each new dependency unearthed, that number kept inflating. Integration of GO-PAY services (which were required for maintaining a driver wallet, and to handle incentives and subsidies) brought its own set of complexities, as its services and tech architecture was modelled differently from the rest of GOJEK.</p><p>As the launch timeline drew closer, there were over 100 microservices to deploy. Not an easy task, but the team finally knew what needed to be done.</p><p>The fog of war was finally parting. Now, to build a working environment.</p><h1 id=\"gunning-for-the-finish-line\"><strong>Gunning for the finish line</strong></h1><p>The work on automation and deployment scripts now continued as originally planned. The wheels were in motion again, and passing through terrain GOJEK knew well. It was time to build stuff.</p><p>OpsTech, Transport, GO-SEND, Marketplace, Driver Platform, GO-PAY and Platform teams provided backup, and the products for Vietnam launch were developed (we would launch with GO-RIDE and GO-SEND). The team was working efficiently, and as the cool grip of winter began to give way to the warm summer months, a basic environment was up for app development.</p><blockquote>Then came the next wave of trouble.</blockquote><p>As the environment took shape, our inexperience in dealing with new geographies came back to haunt us. Configuration mismatch across clusters and deployment drift reared their heads. Suddenly, there were more questions that needed answering:</p><blockquote><em><em>1.Where would we manage configuration of services for all the new markets?</em></em></blockquote><blockquote><em><em>2. How would we deploy on containers and ensure that the same version of code was running on all environments?</em></em></blockquote><blockquote><em><em>3. What about logging and monitoring?</em></em></blockquote><p>The goal seemed an eternity away, again.</p><p>Chaos ensued.</p><p>For the continued story of how GOJEK grappled with the challenges brought on by a new geography, read <a href=\"http://bit.ly/2Rm2cSC\" rel=\"noopener\">part 2</a> of this 3 part series.</p><hr><p>Want our updates beamed straight to your inbox? <a href=\"https://mailchi.mp/go-jek/gojek-tech-newsletter\" rel=\"noopener\">Sign up for our newsletter!</a></p>","url":"https://gojek-ghost.zysk.in/to-new-frontiers-how-gojek-went-international/","canonical_url":null,"uuid":"c5cb2b17-100d-47e1-a26f-4f6c49eb16cb","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ec2d7d87aa22c4066f83c9e","reading_time":8}},"pageContext":{"slug":"to-new-frontiers-how-gojek-went-international"}}}